#BlueJ class context
comment0.target=Indexador
comment0.text=\r\n\ Clase\ que\ genera\ las\ referencias\ cruzadas\ del\ vocabulario\ en\ un\ conjunto\ \r\n\ de\ libros.\r\n\ Es\ decir,\ analiza\ los\ documentos\ para\ obtener\ informaci\u00C3\u00B3n\ que\ permita\ \ \r\n\ consultar\ de\ forma\ eficiente\ en\ que\ lineas\ de\ que\ documentos\ aparece\ una\ \r\n\ determinada\ palabra.\r\n\ Permite\ la\ siguiente\ funcionalidad\:\r\n\ 1.-\ Construir\ un\ Indexador\ a\ partir\ de\ un\ listado\ con\ los\ nombres\ de\ los\r\n\ \ \ \ \ documentos\ y\ el\ numero\ aproximado\ de\ terminos\r\n\ 2.-\ Actualizar\ las\ referencias\ cruzadas\ (el\ Indexador)\ cuando\ se\ analiza\ un\ nuevo\ documento\r\n\ 2.-\ Consultar\ en\ que\ lineas\ de\ que\ documentos\ aparece\ una\ determinada\ palabra\r\n\ \r\n\ @author\ (EDA)\ \r\n\ @version\ (Curso\ 2017-2018)\r\n
comment1.params=listaLibros\ tallaAprox
comment1.target=Indexador(java.lang.String,\ int)
comment1.text=\ Construye\ un\ indexador\ a\ partir\ de\ los\ textos\ cuyos\ nombres\ se\ encuentran\r\n\ \ en\ listaLibros.\r\n\ \ @param\ \ \ String\ listaLibros,\ nombre\ del\ fichero\ que\ contiene\ la\ lista\ de\ documentos\r\n\ \ @param\ \ \ int\ tallaAprox,\ numero\ aproximado\ de\ terminos\ a\ considerar\r\n\ \ @throws\ \ FileNotFoundException\ si\ no\ se\ encuentra\ algun\ fichero\ \r\n
comment2.params=fichLibro\ separadores
comment2.target=boolean\ cargarLibro(java.lang.String,\ java.lang.String)
comment2.text=\ Actualiza\ el\ Indexador\ con\ los\ datos\ del\ documento\ nombreLibro\ que\r\n\ \ se\ encuentra\ en\ el\ directorio\ dir.\ Si\ no\ existe\ el\ documento,\ no\ hace\ nada.\r\n\ \ @param\ \ \ String\ fichLibro,\ nombre\ del\ fichero\ que\ contiene\ el\ documento\r\n\ \ @param\ \ \ String\ dir,\ nombre\ del\ directorio\ donde\ se\ encuentra\ el\ documento\r\n\ \ @return\ \ boolean,\ true\ si\ el\ libro\ se\ ha\ leido\ con\ exito\ y\ falso\ en\ caso\ contrario\r\n
comment3.params=pal
comment3.target=librerias.estructurasDeDatos.modelos.ListaConPI\ indiceDe(java.lang.String)
comment3.text=\r\n\ Devuelve\ una\ ListaConPI\ con\ la\ representaci\u00C3\u00B3n\ textual\r\n\ del\ libro\ y\ pagina\ (Indice)\ en\ los\ que\ aparece\ el\ termino\r\n\ @param\ \ \ String\ a\ buscar\r\n\ @return\ ListaConPI<String>\r\n
comment4.params=s
comment4.target=boolean\ esTermino(java.lang.String)
comment4.text=\ Comprueba\ si\ el\ String\ s\ es\ un\ termino\ valido\r\n\ es\ decir,\ si\ es\ una\ secuencia\ de\ letras\r\n
numComments=5
